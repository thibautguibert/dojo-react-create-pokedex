{"version":3,"sources":["components/Card.jsx","components/Navbar.jsx","components/Pokedex.jsx","components/RandomPoke.jsx","components/SearchPoke.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","state","active","handleClick","bind","newActive","this","setState","name","id","sprites","types","className","src","front_shiny","front_default","alt","back_shiny","back_default","type","onClick","React","Component","Navbar","to","Pokedex","pokedex","start","end","gens","gen1","gen2","gen3","gen4","gen5","gen6","gen7","gen8","getPokedex","axios","get","then","res","pokeUrls","data","results","map","url","getAllPokemon","urls","pokeList","i","response","newPoke","concat","length","handleChange","e","target","value","prevProps","prevState","console","log","onChange","pokemon","RandomPoke","getRandomPokemon","random","Math","floor","randomPokemon","randomDisplay","SearchPoke","event","inputValue","errorMessage","getPokeFromSearch","toLowerCase","searchedPokemon","searchDisplay","catch","error","placeholder","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f38f2beb.chunk.js","sourcesContent":["import React from 'react';\nimport './card.css';\n\nclass Card extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: false\n        };\n        this.handleClick = this.handleClick.bind(this);\n    };\n\n    handleClick() {\n        const newActive = !this.state.active;\n        this.setState({ active: newActive });\n    }\n\n    render() {\n        const { active } = this.state;\n        const { name, id, sprites, types } = this.props;\n        return (\n\n            <div className=\"card\">\n                <header>\n                    <p className=\"name\">{name}</p>\n                    <p className=\"id\">{id}</p>\n                </header>\n                <figure className=\"sprite-container\">\n                    <img\n                        src={active ? sprites.front_shiny : sprites.front_default}\n                        alt=\"front sprite\"\n                        className=\"front-sprite\" />\n                    <img\n                        src={active ? sprites.back_shiny : sprites.back_default}\n                        alt=\"back sprite\"\n                        className=\"back-sprite\" />\n                </figure>\n                <button\n                    type=\"button\"\n                    className={active ? \"shiny-btn active\" : \"shiny-btn\"}\n                    onClick={this.handleClick}\n                >✨</button>\n                <div className=\"type-container\">\n                    <div className={\"type \" + types[0]}>{types[0]}</div>\n                    <div className={types[1] ? \"type \" + types[1] : \"none\"}>{types[1]}</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Card;","import './navbar.css';\nimport { Link } from 'react-router-dom';\n\nfunction Navbar() {\n    return (\n        <div className=\"navbar\">\n            <h1>PokeApp</h1>\n            <ul>\n                <Link to=\"/\">Pokédex</Link>\n                <Link to=\"/random-team\">Random Team</Link>\n                <Link to=\"/search\">Search a Pokémon</Link>\n            </ul>\n        </div>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport axios from 'axios';\nimport './card.css';\nimport './pokedex.css';\nimport Card from './Card';\nimport Navbar from './Navbar';\n\nclass Pokedex extends React.Component {\n    state = {\n        pokedex: [],\n        start: 0,\n        end: 151,\n        gens: {\n            gen1: [0, 151],\n            gen2: [151, 251],\n            gen3: [251, 386],\n            gen4: [386, 493],\n            gen5: [493, 649],\n            gen6: [649, 721],\n            gen7: [721, 809],\n            gen8: [809, 893]\n        }\n    };\n\n    componentDidMount() {\n        const { start, end } = this.state;\n        this.getPokedex(start, end);\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        const { start, end } = this.state;\n        if (prevState.start !== start) {\n            this.getPokedex(start, end);\n        }\n        console.log(\"new pokedex is loaded\");\n    }\n\n    getPokedex = (start, end) => {\n        axios.get(`https://pokeapi.co/api/v2/pokemon?limit=${end - start}&offset=${start}`)\n            .then(res => {\n                const pokeUrls = res.data.results.map(({ url }) => url);\n                this.getAllPokemon(pokeUrls);\n            });\n    }\n\n    getAllPokemon = (urls) => {\n        let pokeList = [];\n        for (let i = 0; i < urls.length; i++) {\n            axios.get(urls[i])\n                .then(response => response.data)\n                .then(data => {\n                    const newPoke = [{\n                        id: data.id,\n                        name: data.name,\n                        sprites: data.sprites,\n                        types: [\n                            data.types[0].type.name, \"\"\n                        ]\n                    }];\n                    if (data.types[1]) {\n                        newPoke[0].types[1] = data.types[1].type.name;\n                    }\n                    pokeList = pokeList.concat(newPoke);\n                    if (i === urls.length - 1) {\n                        this.setState({\n                            pokedex: pokeList\n                        })\n                    }\n                })\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            start: this.state.gens[e.target.value][0],\n            end: this.state.gens[e.target.value][1]\n        })\n    }\n\n    render() {\n        const { pokedex } = this.state;\n        return (\n            <div>\n                <Navbar />\n                <div className=\"pokedex\" >\n                    <select name=\"generation\" id=\"generation\" onChange={this.handleChange}>\n                        <option value=\"gen1\">Generation 1 Pokedex (#1 to #151)</option>\n                        <option value=\"gen2\">Generation 2 Pokedex (#152 to #251)</option>\n                        <option value=\"gen3\">Generation 3 Pokedex (#253 to #386)</option>\n                        <option value=\"gen4\">Generation 4 Pokedex (#387 to #493)</option>\n                        <option value=\"gen5\">Generation 5 Pokedex (#494 to #649)</option>\n                        <option value=\"gen6\">Generation 6 Pokedex (#650 to #721)</option>\n                        <option value=\"gen7\">Generation 7 Pokedex (#722 to #809)</option>\n                        <option value=\"gen8\">Generation 8 Pokedex (#810 to #893)</option>\n                    </select>\n                    <div className=\"pokedex-container\">\n                        {pokedex.map(pokemon => (\n                            < Card\n                                key={pokemon.id}\n                                name={pokemon.name}\n                                id={pokemon.id}\n                                sprites={pokemon.sprites}\n                                types={pokemon.types}\n                            />\n                        ))}\n                    </div>\n                </div >\n            </div>\n        )\n    }\n}\nexport default Pokedex;","import React from 'react';\nimport axios from 'axios';\nimport Card from './Card';\nimport Navbar from './Navbar';\nimport './randomPoke.css';\n\nclass RandomPoke extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            randomDisplay: false,\n            randomPokemon: {\n                id: 0,\n                name: \"\",\n                sprites: {\n                    back_default: \"\",\n                    front_default: \"\",\n                    back_shiny: \"\",\n                    front_shiny: \"\"\n                },\n                types: [\n                    \"null\", \"\"\n                ]\n            }\n        }\n    }\n\n    getRandomPokemon = () => {\n        const random = Math.floor(Math.random() * 898) + 1;\n        axios.get(`https://pokeapi.co/api/v2/pokemon/${random}`)\n            .then(response => response.data)\n            .then(data => {\n                this.setState(prevState => {\n                    let randomPokemon = { ...prevState.randomPokemon };\n                    randomPokemon.types[1] = \"\";\n                    randomPokemon.id = data.id;\n                    randomPokemon.name = data.name;\n                    randomPokemon.sprites = data.sprites;\n                    randomPokemon.types[0] = data.types[0].type.name;\n                    if (data.types[1]) {\n                        randomPokemon.types[1] = data.types[1].type.name\n                    }\n                    return { randomPokemon };\n                })\n                this.setState(\n                    { randomDisplay: true }\n                );\n            })\n    };\n\n    render() {\n        const { randomPokemon } = this.state;\n        return (\n            <div>\n                <Navbar />\n                <div className=\"random-container\">\n                    < button\n                        type=\"button\"\n                        className=\"random\"\n                        onClick={this.getRandomPokemon}\n                    > Un pokémon au hasard</button>\n                    {this.state.randomDisplay ? < Card\n                        name={randomPokemon.name}\n                        id={randomPokemon.id}\n                        sprites={randomPokemon.sprites}\n                        types={randomPokemon.types}\n                    /> : \"\"}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RandomPoke;","import React from 'react';\nimport axios from 'axios';\nimport Card from './Card';\nimport Navbar from './Navbar';\nimport './searchPoke.css';\n\n\nclass SearchPoke extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            searchDisplay: false,\n            inputValue: \"\",\n            errorMessage: \"\",\n            searchedPokemon: {\n                id: 0,\n                name: \"\",\n                sprites: {\n                    back_default: \"\",\n                    front_default: \"\",\n                    back_shiny: \"\",\n                    front_shiny: \"\"\n                },\n                types: [\n                    \"null\", \"\"\n                ]\n            },\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({ inputValue: event.target.value, errorMessage: \"\" });\n    }\n\n    getPokeFromSearch = () => {\n        const { inputValue } = this.state;\n        const value = inputValue.toLowerCase();\n        axios.get(`https://pokeapi.co/api/v2/pokemon/${value}`)\n            .then(response => response.data)\n            .then(data => {\n                this.setState(prevState => {\n                    let searchedPokemon = { ...prevState.searchedPokemon };\n                    searchedPokemon.types[1] = \"\";\n                    searchedPokemon.id = data.id;\n                    searchedPokemon.name = data.name;\n                    searchedPokemon.sprites = data.sprites;\n                    searchedPokemon.types[0] = data.types[0].type.name;\n                    if (data.types[1]) {\n                        searchedPokemon.types[1] = data.types[1].type.name\n                    }\n                    console.log(this.state);\n                    return { searchedPokemon };\n                })\n                this.setState(\n                    { searchDisplay: true }\n                )\n            })\n            .catch(error => {\n                console.log(error.response)\n                this.setState({ errorMessage: \"Nous n'avons pas trouvé ce pokémon... Essayez le nom en anglais\" })\n            });\n\n\n    }\n\n\n    render() {\n        const { searchedPokemon } = this.state;\n        return (\n            <div>\n                <Navbar />\n                <div className=\"search-container\" >\n                    <div className=\"input-container\">\n                        <input\n                            className=\"search-bar\"\n                            type=\"text\"\n                            placeholder=\"enter a pokemon name\"\n                            value={this.state.inputValue}\n                            onChange={this.handleChange}\n                        />\n                        <button\n                            type=\"button\"\n                            className=\"search-btn\"\n                            onClick={this.getPokeFromSearch}\n                        >🔍 </button>\n                        <p className=\"error-message\">\n                            {this.state.errorMessage}\n                        </p>\n                    </div>\n                    {this.state.searchDisplay ? < Card\n                        name={searchedPokemon.name}\n                        id={searchedPokemon.id}\n                        sprites={searchedPokemon.sprites}\n                        types={searchedPokemon.types}\n                    /> : \"\"}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchPoke;","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Pokedex from './components/Pokedex';\nimport RandomPoke from './components/RandomPoke';\nimport SearchPoke from './components/SearchPoke';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Pokedex} />\n          <Route path=\"/random-team\" component={RandomPoke} />\n          <Route path=\"/search\" component={SearchPoke} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}