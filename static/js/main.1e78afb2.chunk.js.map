{"version":3,"sources":["components/Card.jsx","components/Navbar.jsx","components/Pokedex.jsx","components/RandomPoke.jsx","components/SearchPoke.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","state","active","handleClick","bind","newActive","this","setState","name","id","sprites","types","className","src","front_shiny","front_default","alt","back_shiny","back_default","type","onClick","React","Component","Navbar","xcross","handleBurgerClick","scrollLock","scrollPos","document","body","screenW","window","screen","width","style","overflowY","prevProps","prevState","console","log","to","Pokedex","pokedex","start","end","gens","gen1","gen2","gen3","gen4","gen5","gen6","gen7","gen8","isLoaded","getPokedex","axios","get","then","res","pokeUrls","data","results","map","url","getAllPokemon","urls","pokeList","i","response","newPoke","concat","length","handleChange","e","target","value","onChange","pokemon","RandomPoke","AddRandomPokemon","random","Math","floor","newPokemon","randomPokemon","randomDisplay","getRandomTeam","teamSize","SearchPoke","event","inputValue","errorMessage","getPokeFromSearch","toLowerCase","searchedPokemon","searchDisplay","catch","error","placeholder","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1e78afb2.chunk.js","sourcesContent":["import React from 'react';\nimport './card.css';\n\nclass Card extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: false\n        };\n        this.handleClick = this.handleClick.bind(this);\n    };\n\n    handleClick() {\n        const newActive = !this.state.active;\n        this.setState({ active: newActive });\n    }\n\n    render() {\n        const { active } = this.state;\n        const { name, id, sprites, types } = this.props;\n        return (\n\n            <div className=\"card\">\n                <header>\n                    <p className=\"name\">{name}</p>\n                    <p className=\"id\">{id}</p>\n                </header>\n                <figure className=\"sprite-container\">\n                    <img\n                        src={active ? sprites.front_shiny : sprites.front_default}\n                        alt=\"front sprite\"\n                        className=\"front-sprite\" />\n                    <img\n                        src={active ? sprites.back_shiny : sprites.back_default}\n                        alt=\"back sprite\"\n                        className=\"back-sprite\" />\n                </figure>\n                <button\n                    type=\"button\"\n                    className={active ? \"shiny-btn active\" : \"shiny-btn\"}\n                    onClick={this.handleClick}\n                >✨</button>\n                <div className=\"type-container\">\n                    <div className={\"type \" + types[0]}>{types[0]}</div>\n                    <div className={types[1] ? \"type \" + types[1] : \"none\"}>{types[1]}</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Card;","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport './navbar.css';\n\nclass Navbar extends React.Component {\n    state = {\n        xcross: false\n    }\n\n    componentDidMount() {\n        this.scrollLock();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { xcross } = this.state;\n        if (prevState.xcross !== xcross) {\n            this.scrollLock();\n            console.log(\"hop\");\n        }\n    }\n\n    handleBurgerClick = () => {\n        const { xcross } = this.state;\n        this.setState({ xcross: !xcross })\n    }\n\n    scrollLock = () => {\n        const { xcross } = this.state;\n        const scrollPos = document.body;\n        const screenW = window.screen.width;\n        if (xcross === true && screenW < 600) {\n            scrollPos.style.overflowY = \"hidden\";\n        } else {\n            scrollPos.style.overflowY = \"initial\";\n        }\n    };\n    render() {\n        const { xcross } = this.state;\n        return (\n            <div className=\"navbar\">\n                <h1>PokeApp</h1>\n                <ul className=\"ul-desktop\">\n                    <Link to=\"/\">Pokédex</Link>\n                    <Link to=\"/random-team\">Random Team</Link>\n                    <Link to=\"/search\">Search a Pokémon</Link>\n                </ul>\n                <ul className={xcross ? \"ul-mobile active\" : \"ul-mobile\"}>\n                    <Link to=\"/\">Pokédex</Link>\n                    <Link to=\"/random-team\">Random Team</Link>\n                    <Link to=\"/search\">Search a Pokémon</Link>\n                </ul>\n                <button\n                    className={xcross ? \"Burger xcross\" : \"Burger\"}\n                    onClick={this.handleBurgerClick}\n                >\n                    <div className=\"bar\" id=\"first-bar\"></div>\n                    <div className=\"bar\" id=\"second-bar\"></div>\n                    <div className=\"bar\" id=\"third-bar\"></div>\n                </button>\n            </div >\n        )\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport axios from 'axios';\nimport './card.css';\nimport './pokedex.css';\nimport Card from './Card';\nimport Navbar from './Navbar';\n\nclass Pokedex extends React.Component {\n    state = {\n        pokedex: [],\n        start: 0,\n        end: 151,\n        gens: {\n            gen1: [0, 151],\n            gen2: [151, 251],\n            gen3: [251, 386],\n            gen4: [386, 494],\n            gen5: [494, 649],\n            gen6: [649, 721],\n            gen7: [721, 809],\n            gen8: [809, 893]\n        },\n        isLoaded: false\n    };\n\n    componentDidMount() {\n        const { start, end } = this.state;\n        this.getPokedex(start, end);\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        const { start, end } = this.state;\n        if (prevState.start !== start) {\n            this.getPokedex(start, end);\n        }\n        console.log(\"new pokedex is loaded\");\n    }\n\n    getPokedex = (start, end) => {\n        axios.get(`https://pokeapi.co/api/v2/pokemon?limit=${end - start}&offset=${start}`)\n            .then(res => {\n                const pokeUrls = res.data.results.map(({ url }) => url);\n                this.getAllPokemon(pokeUrls);\n            });\n    }\n\n    getAllPokemon = (urls) => {\n        let pokeList = [];\n        for (let i = 0; i < urls.length; i++) {\n            axios.get(urls[i])\n                .then(response => response.data)\n                .then(data => {\n                    const newPoke = [{\n                        id: data.id,\n                        name: data.name,\n                        sprites: data.sprites,\n                        types: [\n                            data.types[0].type.name, \"\"\n                        ]\n                    }];\n                    if (data.types[1]) {\n                        newPoke[0].types[1] = data.types[1].type.name;\n                    }\n                    pokeList = pokeList.concat(newPoke);\n                    if (i === urls.length - 1) {\n                        this.setState({\n                            pokedex: pokeList\n                        })\n                    }\n                })\n\n        }\n        this.setState({ isLoaded: true });\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            start: this.state.gens[e.target.value][0],\n            end: this.state.gens[e.target.value][1],\n            isLoaded: false\n        })\n    }\n\n    render() {\n        const { pokedex, isLoaded } = this.state;\n        return (\n            <div>\n                <Navbar />\n                <div className=\"pokedex\" >\n                    <select name=\"generation\" id=\"generation\" onChange={this.handleChange}>\n                        <option value=\"gen1\">Generation 1 Pokedex (#1 to #151)</option>\n                        <option value=\"gen2\">Generation 2 Pokedex (#152 to #251)</option>\n                        <option value=\"gen3\">Generation 3 Pokedex (#253 to #386)</option>\n                        <option value=\"gen4\">Generation 4 Pokedex (#387 to #494)</option>\n                        <option value=\"gen5\">Generation 5 Pokedex (#495 to #649)</option>\n                        <option value=\"gen6\">Generation 6 Pokedex (#650 to #721)</option>\n                        <option value=\"gen7\">Generation 7 Pokedex (#722 to #809)</option>\n                        <option value=\"gen8\">Generation 8 Pokedex (#810 to #893)</option>\n                    </select>\n                    <div className=\"pokedex-container\">\n                        {isLoaded ? pokedex.map(pokemon => (\n                            < Card\n                                key={pokemon.id}\n                                name={pokemon.name}\n                                id={pokemon.id}\n                                sprites={pokemon.sprites}\n                                types={pokemon.types}\n                            />\n                        ))\n                            : \"Pokemon are loading\"\n                        }\n                    </div>\n                </div >\n            </div>\n        )\n    }\n}\nexport default Pokedex;","import React from 'react';\nimport axios from 'axios';\nimport Card from './Card';\nimport Navbar from './Navbar';\nimport './randomPoke.css';\n\nclass RandomPoke extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            randomDisplay: false,\n            randomPokemon: []\n        }\n    }\n\n    componentDidMount() {\n        this.getRandomTeam(6);\n    }\n\n    AddRandomPokemon = () => {\n        const random = Math.floor(Math.random() * 898) + 1;\n        axios.get(`https://pokeapi.co/api/v2/pokemon/${random}`)\n            .then(response => response.data)\n            .then(data => {\n                this.setState(prevState => {\n                    let newPokemon = {\n                        id: 0,\n                        name: \"\",\n                        sprites: {\n                            back_default: \"\",\n                            front_default: \"\",\n                            back_shiny: \"\",\n                            front_shiny: \"\"\n                        },\n                        types: [\n                            \"\", \"\"\n                        ]\n                    }\n                    newPokemon.id = data.id;\n                    newPokemon.name = data.name;\n                    newPokemon.sprites = data.sprites;\n                    newPokemon.types[0] = data.types[0].type.name;\n                    if (data.types[1]) {\n                        newPokemon.types[1] = data.types[1].type.name\n                    }\n                    return { randomPokemon: [...prevState.randomPokemon, newPokemon] };\n                })\n                this.setState(\n                    { randomDisplay: true }\n                );\n            })\n    };\n\n    getRandomTeam = (teamSize) => {\n        for (let i = 0; i < teamSize; i++) {\n            this.AddRandomPokemon();\n        }\n    }\n\n    render() {\n        const { randomPokemon } = this.state;\n        return (\n            <div className=\"random-page\">\n                <Navbar />\n                < button\n                    type=\"button\"\n                    className=\"random\"\n                    onClick={() => {\n                        this.setState({ randomPokemon: [] });\n                        this.getRandomTeam(6);\n                    }}\n                > Generate a new team</button>\n                <div className=\"random-container\">\n                    {randomPokemon.map(pokemon => (\n                        < Card\n                            key={pokemon.id}\n                            name={pokemon.name}\n                            id={pokemon.id}\n                            sprites={pokemon.sprites}\n                            types={pokemon.types}\n                        />\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RandomPoke;","import React from 'react';\nimport axios from 'axios';\nimport Card from './Card';\nimport Navbar from './Navbar';\nimport './searchPoke.css';\n\n\nclass SearchPoke extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            searchDisplay: false,\n            inputValue: \"\",\n            errorMessage: \"\",\n            searchedPokemon: {\n                id: 0,\n                name: \"\",\n                sprites: {\n                    back_default: \"\",\n                    front_default: \"\",\n                    back_shiny: \"\",\n                    front_shiny: \"\"\n                },\n                types: [\n                    \"null\", \"\"\n                ]\n            },\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({ inputValue: event.target.value, errorMessage: \"\" });\n    }\n\n    getPokeFromSearch = () => {\n        const { inputValue } = this.state;\n        const value = inputValue.toLowerCase();\n        axios.get(`https://pokeapi.co/api/v2/pokemon/${value}`)\n            .then(response => response.data)\n            .then(data => {\n                this.setState(prevState => {\n                    let searchedPokemon = { ...prevState.searchedPokemon };\n                    searchedPokemon.types[1] = \"\";\n                    searchedPokemon.id = data.id;\n                    searchedPokemon.name = data.name;\n                    searchedPokemon.sprites = data.sprites;\n                    searchedPokemon.types[0] = data.types[0].type.name;\n                    if (data.types[1]) {\n                        searchedPokemon.types[1] = data.types[1].type.name\n                    }\n                    console.log(this.state);\n                    return { searchedPokemon };\n                })\n                this.setState(\n                    { searchDisplay: true }\n                )\n            })\n            .catch(error => {\n                console.log(error.response)\n                this.setState({ errorMessage: \"Nous n'avons pas trouvé ce pokémon... Essayez le nom en anglais\" })\n            });\n\n\n    }\n\n\n    render() {\n        const { searchedPokemon } = this.state;\n        return (\n            <div>\n                <Navbar />\n                <div className=\"search-container\" >\n                    <div className=\"input-container\">\n                        <input\n                            className=\"search-bar\"\n                            type=\"text\"\n                            placeholder=\"enter a pokemon name\"\n                            value={this.state.inputValue}\n                            onChange={this.handleChange}\n                        />\n                        <button\n                            type=\"button\"\n                            className=\"search-btn\"\n                            onClick={this.getPokeFromSearch}\n                        >🔍 </button>\n                        <p className=\"error-message\">\n                            {this.state.errorMessage}\n                        </p>\n                    </div>\n                    {this.state.searchDisplay ? < Card\n                        name={searchedPokemon.name}\n                        id={searchedPokemon.id}\n                        sprites={searchedPokemon.sprites}\n                        types={searchedPokemon.types}\n                    /> : \"\"}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchPoke;","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Pokedex from './components/Pokedex';\nimport RandomPoke from './components/RandomPoke';\nimport SearchPoke from './components/SearchPoke';\n\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Pokedex} />\n          <Route path=\"/random-team\" component={RandomPoke} />\n          <Route path=\"/search\" component={SearchPoke} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}